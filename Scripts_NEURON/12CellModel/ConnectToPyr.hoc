NCELL = 2

obfunc LoadMatrix() { local nrow,ncol localobj mat,datafile

	nrow = $2

	ncol = $3

	datafile = new File()

	datafile.ropen($s1)

	mat = new Matrix()

	mat.scanf(datafile,nrow,ncol)


	datafile.close()

	return mat

}



objref SynMatrix

SynMatrix = new Matrix()

SynMatrix = LoadMatrix(FileLocationStr_InternalSynConns, NCELL, NCELL)

proc ChnToPyr() { local i, j, cellgid, inputid, sourceid, targetid, synid localobj syn,cellid, nc, nclist, synlist, CurrentRec

	synlist = $o1
	nclist = $o2	
	CurrentRec = $o3
	
	{pc.barrier()}

	for j = 0, 3 {

		cellgid = j

		if(!pc.gid_exists(cellgid)) { continue }

		for i = 8, NCELL-1 {
		
			inputid = i
			
			synid = SynMatrix.x[inputid][cellgid]
			
			if (synid != 0) {
			
				sourceid = inputid

				targetid = cellgid

				cellid = pc.gid2cell(targetid)

				//cellid.AIS[9] syn = new Chn_Pyr(0.9)
				cellid.AIS[9] syn = new MyExp2Sid(0.9)
				//cellid.soma syn = new MyExp2Sid(0.9)

				syn.pregid = sourceid

				syn.postgid = targetid
			
				cellid.synlist.append(syn) 

				syn.srcid= sourceid

				syn.destid= targetid

				//syn.initW = 5
			
				nc = pc.gid_connect(sourceid,syn)

				nc.weight = 0.8//0.7

				nc.delay = 0

				nc.threshold = 0
				
				printf("Cell %d connected to %d\n",sourceid+1,targetid+1)
				
				//CurrentRec.record(&syn.i)
			
				synlist.append(syn)

				nclist.append(nc)
			}
				
		}

	}

}

proc PyrToPyr() { local i, j, cellgid, inputid, sourceid, targetid, synid localobj syn,cellid, nc, nclist, synlist

	synlist = $o1
	nclist = $o2	
	
	{pc.barrier()}

	for j = 0, NCELL-1 {

		cellgid = j

		if(!pc.gid_exists(cellgid)) { continue }

		for i = 1, 3 {
		
			inputid = i
			
			synid = SynMatrix.x[inputid][cellgid]
			
			if (synid != 0) {
			
				sourceid = inputid

				targetid = cellgid

				cellid = pc.gid2cell(targetid)

				cellid.soma syn = new Pyr_ITN(0.9)    

				syn.pregid = sourceid

				syn.postgid = targetid
			
				cellid.synlist.append(syn) 

				syn.srcid= sourceid

				syn.destid= targetid

				syn.initW = 5
			
				nc = pc.gid_connect(sourceid,syn)

				nc.weight = 1

				nc.delay = 1

				nc.threshold = 0
			
				synlist.append(syn)

				nclist.append(nc)
			}
				
		}

	}

}

proc ITNToPyr() { local i, j, cellgid, inputid, sourceid, targetid, synid localobj syn,cellid, nc, nclist, synlist

	synlist = $o1
	nclist = $o2	
	
	{pc.barrier()}

	for j = 0, NCELL-1 {

		cellgid = j

		if(!pc.gid_exists(cellgid)) { continue }

		for i = 4, 7 {
		
			inputid = i
			
			synid = SynMatrix.x[inputid][cellgid]
			
			if (synid != 0) {
			
				sourceid = inputid

				targetid = cellgid

				cellid = pc.gid2cell(targetid)

				cellid.soma syn = new ITN_Pyr(0.9)    

				syn.pregid = sourceid

				syn.postgid = targetid
			
				cellid.synlist.append(syn) 

				syn.srcid= sourceid

				syn.destid= targetid

				syn.initW = 2
			
				nc = pc.gid_connect(sourceid,syn)

				nc.weight = 1

				nc.delay = 1

				nc.threshold = 0
			
				synlist.append(syn)

				nclist.append(nc)
			}
				
		}

	}

}
